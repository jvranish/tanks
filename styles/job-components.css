/*
- main-content
- container
- box
- primary button
- row-flex
- row-flex-wrap
- flex content
- simple grid

TODO JDV
- imports?
- router?
- breadcrumbs?
- input with validator
- hamburger menu
- navbar
- animated dropdown menu?
*/

/* Unset some properties that just get in the way
once we're trying to lay things out for real */
body {
  max-width: unset;
  padding: 0 0;
}

input, select, button, textarea {
  margin-bottom: 0;
}

input:not([type='checkbox']):not([type='radio']),
button {
  display: block;
}

.container {
  width: 100%;
  padding: 1rem;
}

/* Better name for this?  */
.main-content {
  padding-left: max(calc(50% - var(--content-max-width) / 2), 1rem);
  padding-right: max(calc(50% - var(--content-max-width) / 2), 1rem);
}

.row-flex {
  display: flex;
  flex-flow: row wrap;
}

    /* padding: 0.5em; */
/* 
.row-flex>* {
  flex: 1;
} */

.col-flex {
  display: flex;
  flex-flow: column wrap;
}

.row-flex-wrap {
  display: flex;
  flex-flow: row wrap;
}


/* .row-flex-wrap > * {
  padding: 0.5em;
  flex: 1;
} */

.flex-end {
  align-items: center;
  justify-content: flex-end;
}

.flex-2 {
  flex: 2;
}

.flex-3 {
  flex: 3;
}

.flex-content {
  flex: unset;
  /* width: min-content; */
}

.grid-container {
	display: grid;
	position: relative;
  width: 100%;
	grid-gap: 2rem;
	gap: 2rem;

	/* by default use min 200px wide columns auto-fit into width */
	grid-template-columns: minmax(200px, 1fr);
}

/* grids to 3 columns above mobile sizes */
@media (min-width: 600px) {
	.grid-container {
		grid-template-columns: repeat(3, 1fr);
	}

	/* basic grids */
	.grid-container.fifths {
		grid-template-columns: repeat(5, 1fr);
	}
	.grid-container.quarters {
		grid-template-columns: repeat(4, 1fr);
	}
	.grid-container.thirds {
		grid-template-columns: repeat(3, 1fr);
	}
	.grid-container.halves {
		grid-template-columns: repeat(2, 1fr);
	}
	.grid-container.full {
		grid-template-columns: 1fr;
	}

}


.main-header {
  background-color: var(--background-color-softer);
  border-bottom: 1px solid var(--border-color-softer);
  box-shadow: 0 .1rem .2rem var(--shadow-color);

  overflow: auto;
}

.main-footer {
  background-color: var(--background-color-softer);
  border-top: 1px solid var(--border-color-softer);

  overflow: auto;
}

.item {
  border: 1px solid var(--border-color-softer);
  border-radius: 4px;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.box {
  box-shadow: 0 .2rem .4rem var(--shadow-color);
  border: 1px solid var(--border-color-softer);
  border-radius: 4px;
	text-align: center;
  /* width: 200px; */
  display: flex;
  flex-flow: column nowrap;
  /* flex-wrap: wrap; */
  justify-content: center;
  width: 30ch;
}

.box > .box-header {
  background-color: var(--background-color-softer);
  border-bottom: 1px solid var(--border-color-softer);
	text-align: center;
  overflow: auto;
}

.box > .box-body {
  padding: 1.5rem;
	text-align: center;
}

.box > .box-footer {
  border-top: 1px solid var(--border-color-softer);
  padding: 1.5rem;
  background-color: var(--background-color-softer);
	text-align: center;
}

.button-primary {
  color: var(--button-primary-color);
  background-color: var(--accent-color);
  border-color: var(--accent-color);
}
.button-primary:hover,
.button-primary:focus {
  color: var(--button-primary-color);
  background-color: var(--accent-color-hover);
  border-color: var(--accent-color-hover);
}

/* Source: https://codepen.io/mandelid/pen/vwKoe */
.spinner {
  display: inline-block;
  width: 3.5rem;
  height: 3.5rem;
  border: 3px solid var(--border-color-softer);
  border-radius: 50%;
  border-top-color: var(--border-color);
  animation: spinner 1s ease-in-out infinite;
  -webkit-animation: spinner 1s ease-in-out infinite;
}

@keyframes spinner {
  to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spinner {
  to { -webkit-transform: rotate(360deg); }
}


/* TODO think up new idea for icons */

.icon {
  display: inline-block;
  width: 3rem;
  height: 3rem;
  mask-size: cover;
  -webkit-mask-size: cover;
}


.icon-error {
  -webkit-mask-image: url("../assets/error-icon.svg");
  mask-image: url("../assets/error-icon.svg");
  background-color: var(--error-color);
  mask-size: cover;
}

.icon-success {
  -webkit-mask-image: url("../assets/success-icon.svg");
  mask-image: url("../assets/success-icon.svg");
  background-color: var(--success-color);
  mask-size: cover;
}

.masked {
  width: 100px;
  height: 100px;
  background-color: #8cffa0;
  -webkit-mask-image: url(star.svg);
  mask-image: url(star.svg);
}


.icon-emoji {
  font-size: 1em;
  display: flex;
  margin-right: 0.25em;
  align-items: center;
  justify-content: center;
  width: 1.5em;
  height: 1.5em;
}

.tile {
  --tile-accent: var(--border-color);
  padding: 0.25em;
  margin-top: .5rem;
  margin-bottom: .5rem;
  border: 1px solid var(--border-color-softer);
  border-radius: 4px;
  box-shadow: 0 .1rem .2rem var(--shadow-color);
  border-left-width: 2px;
  border-left-color: var(--tile-accent);
  display: grid;
  grid-column-gap: 0.25em;
  grid-template-columns: min-content auto;
  grid-template-areas: "icon title" ".... message";
  align-items: center;
}
/* Add a `tile` component? */